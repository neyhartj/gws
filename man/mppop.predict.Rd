% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mppop_predict.R
\name{mppop.predict}
\alias{mppop.predict}
\alias{mppop_predict2}
\title{Predict genetic variance and genetic correlations in multi-parent populations
using a deterministic model}
\usage{
mppop.predict(G.in, y.in, map.in, crossing.table, parents, tail.p = 0.1,
  self.gen = Inf, DH = FALSE, model = c("rrBLUP", "BayesC"),
  n.core = 1)

mppop_predict2(M, y.in, marker.effects, map.in, crossing.table,
  tail.p = 0.1, self.gen = Inf, DH = FALSE, model = c("rrBLUP",
  "BayesC"), n.core = 1)
}
\arguments{
\item{G.in}{See \code{G.in} in \code{\link[PopVar]{pop.predict}}.}

\item{y.in}{See \code{y.in} in \code{\link[PopVar]{pop.predict}}.}

\item{map.in}{See \code{map.in} in \code{\link[PopVar]{pop.predict}}.}

\item{crossing.table}{See \code{crossing.table} in \code{\link[PopVar]{pop.predict}}.}

\item{parents}{See \code{parents} in \code{\link[PopVar]{pop.predict}}.}

\item{tail.p}{See \code{tail.p} in \code{\link[PopVar]{pop.predict}}.}

\item{self.gen}{The number of selfing generations in the potential cross. Can be an integer or \code{Inf} for
recombinant inbreds. Note: \code{self.gen = 1} corresponds to an F2 population.}

\item{DH}{Indicator if doubled-haploids are to be induced after the number of selfing generations indicated by
\code{self.gen}. For example, if \code{self.gen = 0} and \code{DH = TRUE}, then doubled-haploids are asssumed
to be induced using gametes from F1 plants.}

\item{model}{See \code{models} in \code{\link[PopVar]{pop.predict}}. Only 1 model is allowed.}

\item{n.core}{Number of cores for parallelization. Parallelization is supported
only on a Linux or Mac OS operating system; if working on a Windows system, the function
is executed on a single core.}

\item{M}{A Matrix of marker genotypes of dimensions \code{nLine} x \code{nMarker}, coded as
-1, 0, and 1.}

\item{marker.effects}{A data frame of marker effects. The first column should include the marker name and
subsequent columns should include the marker effects.}

\item{y.in}{A data frame of phenotypic means. The first column should include the entry name and
subsequent columns should include phenotypic values. Ignored if \code{marker.effects} is passed.}

\item{map.in}{See \code{map.in} in \code{\link[PopVar]{pop.predict}}.}

\item{crossing.table}{See \code{crossing.table} in \code{\link[PopVar]{pop.predict}}.}

\item{tail.p}{See \code{tail.p} in \code{\link[PopVar]{pop.predict}}.}

\item{self.gen}{The number of selfing generations in the potential cross. Can be an integer or \code{Inf} for
recombinant inbreds. Note: \code{self.gen = 1} corresponds to an F2 population.}

\item{DH}{Indicator if doubled-haploids are to be induced after the number of selfing generations indicated by
\code{self.gen}. For example, if \code{self.gen = 0} and \code{DH = TRUE}, then doubled-haploids are asssumed
to be induced using gametes from F1 plants.}

\item{model}{See \code{models} in \code{\link[PopVar]{pop.predict}}. Only 1 model is allowed.}

\item{n.core}{Number of cores for parallelization; only works on a Linux or Mac OS operating system.}
}
\description{
This function returns predictions of the genotypic mean, genetic variance,
usefulness criterion (superior progeny mean) in a set of multi-parent populations
using marker effects and a genetic map. If more than two traits are specified,
the function will also return predictions of the genetic correlation in the population
and the correlated response to selection.
}
\section{Functions}{
\itemize{
\item \code{mppop_predict2}: 
}}

\examples{

# Load data
data("phenos")
data("genos")
data("map")

# Create 10, 4-way parent combinations
  crosses <- as.data.frame(
    matrix(data = sample(row.names(genos), 40), nrow = 10, byrow = TRUE,
           dimnames = list(NULL, paste0("parent", 1:4))),
    stringsAsFactors = FALSE)

# Format the genotype data
G_in <- as.data.frame(cbind( c("", row.names(genos)), rbind(colnames(genos), genos)) )

# Run predictions
pred_out <- mppop.predict(G.in = G_in, y.in = phenos, map.in = map,
                          crossing.table = crosses, self.gen = 6)



# Load data
data("phenos")
data("genos")
data("map")

# Create 10, 4-way parent combinations
  crosses <- as.data.frame(
    matrix(data = sample(row.names(genos), 40), nrow = 10, byrow = TRUE,
           dimnames = list(NULL, paste0("parent", 1:4))),
    stringsAsFactors = FALSE)

# Run predictions
pred_out <- mppop_predict2(M = genos, y.in = phenos, map.in = map,
                           crossing.table = crosses, self.gen = 6)


## Pass marker effects instead of phenotypes
# First calculate marker effects
phenos2 <- as.matrix(phenos[,-1]); row.names(phenos2) <- phenos[,1]
phenos2 <- phenos2[row.names(genos),]

mar_eff <- apply(X = phenos2, MARGIN = 2, FUN = function(y) mixed.solve(y = y, Z = genos)$u)
marker_effects <- data.frame(marker = row.names(mar_eff), mar_eff, stringsAsFactors = FALSE)

pred_out <- mppop_predict2(M = genos, marker.effects = marker_effects, map.in = map,
                           crossing.table = crosses, self.gen = 6)



}
